// =============================================================================
// Apply style for landscape orientation
// =============================================================================
@mixin landscape {
	@media screen and (orientation:landscape) {
		@content;
	}
}

// =============================================================================
// Apply style for portrait orientation
// =============================================================================
@mixin portrait {
	@media screen and (orientation:portrait) {
		@content;
	}
}

// =============================================================================
// Apply style for device support hover state using mouse input
// =============================================================================
@mixin desktop-hover {
    @media (hover: hover) {
    	&:hover { 
	        @content;
	    }
    }
}

// =============================================================================
// Apply style base on breakpoint manager
// @access public
// @param {String} $breakpoint
// @param {String} $include_print
// @requires $breakpoints
// =============================================================================
@mixin respond-to($breakpoint,$include_print:null) {
	$raw-query: map-get($breakpoints, $breakpoint);

	@if $include_print {
		$include_print: ',print';
	}
	@if $raw-query {
		$query: if(
			type-of($raw-query) == 'string',
			unquote($raw-query),
			inspect($raw-query)
		);

		@media #{$query}#{$include_print} {
	  		@content;
		}
	} @else {
		@error 'No value found for `#{$breakpoint}`. '
			 + 'Please make sure it is defined in `$breakpoints` map.';
	}
}


// =============================================================================
// Apply style only for device with touch support
// =============================================================================
@mixin touchscreen-device {
	@media (hover: none) and (pointer: coarse) {
		@content;
	}	
}

// =============================================================================
// Apply link color style with hover animation color
// @access public
// @param {String} $color_off
// @param {String} $color_on
// @param {List} $browser-prefixes
// =============================================================================
@mixin link-hover ($color_off,$color_on,$browser-prefixes) {
	@include prefix(transition, color 0.5s ease, $browser-prefixes);
	@include desktop-hover {
		color:$color_on;
		text-decoration:none;
	}
	color:$color_off;
}
